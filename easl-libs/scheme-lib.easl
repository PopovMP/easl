;; Scheme lib v2

{function eq?    (a b) (= a b) }
{function eqv?   (a b) (= a b) }
{function equal? (a b) (= a b) }

{function boolean? a (= (type-of a) "boolean") }
{function null?    a (= (type-of a) "null"   ) }
{function number?  a (= (type-of a) "number" ) }
{function string?  a (= (type-of a) "string" ) }
{function list?    a (list.list? a) }
{function pair?    a (and (list.list? a) (> list.length 0)) }
{function empty?   a (list.empty? a) }

{function length   a (list.length a) }

{function cons (a b)
	{if (null? b)
        (list a)
        {if (list? b)
            (list.push b a)
            (list a b) }}}

{function car  a (list.first a) }
{function cdr  a (list.slice a 1) }
{function caar a (list.first (list.first a)) }
{function cadr a (list.get a 1) }
{function cdar a (list.slice (list.first a) 1) }
{function cddr a (list.slice a 2) }
